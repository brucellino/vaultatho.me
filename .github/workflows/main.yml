name: Release
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  actions: read
  contents: write
  deployments: none
  packages: write
  pages: none
  pull-requests: write
  security-events: write
  statuses: write

jobs:
  vpn:
    name: setup Tailscale
    runs-on: ubuntu-latest
    steps:
      - name: Get Tailscale
        run: curl -fsSL https://tailscale.com/install.sh | sh
      - name: Start tailscale
        run: sudo tailscale up --authkey "${TAILSCALE_AUTHKEY}"
        env:
          TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}

  validate:
    name: Test
    needs: [vpn]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: init terraform
        run: terraform init --backend=false
      - name: validate terraform
        run: terraform validate

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [validate]
    strategy:
      fail-fast: false
      matrix:
        vault_version:
          - 1.13.1
          - 1.12.3
          - 1.11.7
        consul_version:
          - 1.15.0
          - 1.14.4
          - 1.13.6
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get curl and zip
        run: sudo apt-get install -y curl unzip jq
      - name: Get Consul
        run: curl -L https://releases.hashicorp.com/consul/${{ matrix.consul_version }}/consul_${{ matrix.consul_version }}_linux_amd64.zip | gunzip -> ~/consul
      - name: Get Vault
        run: curl -L https://releases.hashicorp.com/vault/${{ matrix.vault_version }}/vault_${{ matrix.vault_version }}_linux_amd64.zip | gunzip -> ~/vault
      - name: Make vault and consul executable
        run: chmod +x ~/vault ~/consul
      - name: Start Consul dev server
        run: ~/consul agent -dev &
      - name: Start Vault dev server
        run: ~/vault server -dev &
      - name: init terraform
        run: terraform init
      - name: Plan
        run: |
          VAULT_TOKEN=$(cat ~/.vault-token) \
          TF_VAR_vault_addr=http://localhost:8200 \
          terraform plan
      # - name: stop Vault
      #   run: kill -9 $(jobs -p)
  release:
    needs: [apply]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/hydrogen'
      - name: Install dependencies
        run: |
          npm install -g \
            semantic-release \
            '@semantic-release/changelog' \
            '@semantic-release/github' \
            '@semantic-release/changelog' \
            '@semantic-release/git'
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
